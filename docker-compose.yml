networks:
  jma:
    name: "${APP_ORG}-${APP_NAME}"
    external: true
#    driver: bridge

services:
  java:
    restart: unless-stopped
    build:
      context: .
      dockerfile: .docker/Dockerfile_java
      args:
#        DOCKER_BACKEND_WORKDIR: ${DOCKER_BACKEND_WORKDIR}
#        APP_FRONTEND_PORT: ${APP_FRONTEND_PORT}
#        DOCKER_BACKEND_PORT: ${DOCKER_BACKEND_PORT}
        DB_NAME: ${DB_NAME}
        DB_PORT: ${DB_PORT}
        DB_USERNAME: ${DB_USERNAME}
        DB_PASSWORD: ${DB_PASSWORD}
    container_name: jma-backend-${APP_NAME}
    volumes:
      - .:/app
    ports:
      - "${APP_BACKEND_PORT}:3000"
    environment:
      - APP_NAME=${APP_NAME}
      - APP_FRONTEND_PORT=${APP_FRONTEND_PORT}
#      - DOCKER_BACKEND_PORT=${DOCKER_BACKEND_PORT}
    networks:
      - jma
    depends_on:
      mariadb:
        condition: service_healthy

#  node:
#    build:
#      context: .
#      dockerfile: .docker/Dockerfile_node
#      args:
#        APP_NAME: ${APP_NAME}
#    restart: unless-stopped
#    container_name: jma-frontend-${APP_NAME}
#    environment:
#      - APP_NAME=${APP_NAME}
#    ports:
#      - "${APP_FRONTEND_PORT}:3000"
#    volumes:
#      - .:/app
#    networks:
#      - jma
#    depends_on:
#      - java

  mariadb:
    build:
      context: .
      dockerfile: .docker/Dockerfile_mariadb
    restart: unless-stopped
    container_name: jma-database-${APP_NAME}
    environment:
      - MARIADB_DATABASE=${DB_NAME}
      - MARIADB_USER=${DB_USERNAME}
      - MARIADB_PASSWORD=${DB_PASSWORD}
      - MARIADB_ROOT_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - jma
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mysql_data:
